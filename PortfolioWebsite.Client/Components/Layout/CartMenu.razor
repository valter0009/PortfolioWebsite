@using PortfolioWebsite.Client.Services.Contracts
@using PortfolioWebsite.Models.DTOs
@implements IDisposable
@inject IShoppingCartService shoppingCartService


<div class="d-flex flex-row nav-item-container-width ">
    <a href="ShoppingCart" class="btn mt-1 nav-item-container-fix cart-menu">
        <i class="bi bi-cart fa-sm"></i>
        <span class="badge bg-secondary">@shoppingCartItemCount</span>
    </a>
</div>



@code {
    private int shoppingCartItemCount = 0;
    private List<CartItemDto> shoppingCartItems;

    protected override async Task OnInitializedAsync()
    {
        shoppingCartItemCount = await shoppingCartService.GetItemsCount();
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
        

        
    }

    protected void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }

   

}