// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioWebsite.Api.Data;

#nullable disable

namespace PortfolioWebsite.Api.Migrations
{
    [DbContext(typeof(PortfolioWebsiteDbContext))]
    [Migration("20240210201545_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Merch for my band called Suntari",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/shirts/tr:w-800/suntarishirt2.jpg?updatedAt=1707594734174",
                            Name = "Suntari - Black T-Shirt",
                            Price = 25m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Merch for my other band called Inger Cowboy",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/shirts/tr:w-800/INGERTR%C3%96JA.jpg?updatedAt=1707594733912",
                            Name = "Inger Cowboy - Black T-Shirt",
                            Price = 25m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Merch for my third band called Los Mucus",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/shirts/tr:w-800/mucusshirt.jpg?updatedAt=1707594733635",
                            Name = "Los Mucus - Black T-Shirt",
                            Price = 25m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "A cool sticker to stick on anything you want",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Gallery/Images/tr:w-800/GalleryImage%20(33).jpg?updatedAt=1705912745773",
                            Name = "Obeshimi - Sticker",
                            Price = 3m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "A cool Los Mucus sticker to stick on anything you want",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/stickers/tr:w-800/stickerredversion2.jpg?updatedAt=1707594734695",
                            Name = "Los Mucus - Sticker",
                            Price = 3m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "A cool Los Mucus sticker to stick on anything you want",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/stickers/tr:w-800/sticker.jpg?updatedAt=1707594734694",
                            Name = "Los Mucus - Sticker",
                            Price = 3m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "A cool Los Mucus sticker to stick on anything you want",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/stickers/tr:w-800/Mucusskull.jpg?updatedAt=1707594734689",
                            Name = "Los Mucus - Sticker",
                            Price = 3m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "A 400x200 Print",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/Prints/tr:w-800/birds.jpg?updatedAt=1707594856304",
                            Name = "Birds - Print",
                            Price = 40m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "A 400x200 Print",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/Prints/tr:w-800/sun.jpg?updatedAt=1707594855618",
                            Name = "Ascension - Print",
                            Price = 40m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "A 400x200 Print",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/Prints/tr:w-800/explosion.jpg?updatedAt=1707594855179",
                            Name = "Explosion - Print",
                            Price = 40m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "A 300x200 Print",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/Prints/tr:w-800/holy.jpg?updatedAt=1707594853722",
                            Name = "Mother - Print",
                            Price = 40m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "A 400x200 Print",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/Prints/tr:w-800/Devotion%20Gray.jpg?updatedAt=1707594734206",
                            Name = "Devotion - Print",
                            Price = 40m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Description = "A 400x200 Print",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/Prints/tr:w-800/No%20Tobaccoshirt2.png?updatedAt=1707594733986",
                            Name = "No Tobacco - Print",
                            Price = 40m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Description = "A poster from a gig at Flat Cap, Helsingborg",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/posters/tr:w-800/Flatcap.jpg?updatedAt=1707594735646",
                            Name = "Los Mucus / Flat Cap - Poster",
                            Price = 20m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            Description = "A poster from a gig at Grand, Malmö",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/posters/tr:w-800/GRANDversion2.jpg?updatedAt=1707594734910",
                            Name = "Los Mucus / Grand - Poster",
                            Price = 20m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            Description = "A poster from a gig at Flat Cap, Helsingborg",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/posters/tr:w-800/Flatcap2.jpg?updatedAt=1707594734836",
                            Name = "Los Mucus / Flat Cap - Poster",
                            Price = 20m,
                            Qty = 1000
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            Description = "A poster from a gig at Hemgården, Lund",
                            ImageURL = "https://ik.imagekit.io/valter/StefanPortfolio/Shop/posters/tr:w-800/Posterklar.jpg?updatedAt=1707594734268",
                            Name = "Los Mucus / Hemgården - Poster",
                            Price = 20m,
                            Qty = 1000
                        });
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Shirts"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Stickers"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Prints"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Posters"
                        });
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.CartItem", b =>
                {
                    b.HasOne("PortfolioWebsite.Api.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.Product", b =>
                {
                    b.HasOne("PortfolioWebsite.Api.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("PortfolioWebsite.Api.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
